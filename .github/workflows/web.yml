# Workflow to build your docs with oranda (and mdbook)
# and deploy them to Github Pages
name: Web

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# What situations do we want to build docs in?
# All of these work independently and can be removed / commented out
# if you don't want oranda/mdbook running in that situation
on:
  # Check that a PR didn't break docs!
  #
  # Note that the "Deploy to Github Pages" step won't run in this mode,
  # so this won't have any side-effects. But it will tell you if a PR
  # completely broke oranda/mdbook. Sadly we don't provide previews (yet)!
  pull_request:

  # Whenever a workflow called "Release" completes, update the docs!
  #
  # If you're using cargo-dist, this is recommended, as it will ensure that
  # oranda always sees the latest release right when it's available. Note
  # however that Github's UI is wonky when you use workflow_run, and won't
  # show this workflow as part of any commit. You have to go to the "actions"
  # tab for your repo to see this one running (the gh-pages deploy will also
  # only show up there).
  workflow_run:
    workflows: [ "Release" ]
    types:
      - completed

# Alright, let's do it!
jobs:
  # Build job
  build:
    name: Build site and docs
    runs-on: ubuntu-latest
    steps:
      # Setup
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dtolnay/rust-toolchain@stable
      - uses: swatinem/rust-cache@v2

      # If you use any mdbook plugins, here's the place to install them!

      # Install and run oranda (and mdbook)
      # This will write all output to ./public/ (including copying mdbook's output to there)
      - name: Install and run oranda
        run: |
          curl --proto '=https' --tlsv1.2 -LsSf https://github.com/axodotdev/oranda/releases/latest/download/oranda-installer.sh | sh
          oranda build

      # Upload the "public" dir artifact so it can be deployed.
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Gotta tell the action where to find oranda's output
          path: "./public"

  # Deployment job
  deploy:
    # ONLY if we're on main (so no PRs or feature branches allowed!)
    if: ${{ github.ref == 'refs/heads/main' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Deploy the "public" dir that oranda made directly to Github Pages.
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
